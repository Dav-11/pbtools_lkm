/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: benchmark.proto */

#ifndef PROTOBUF_C_benchmark_2eproto__INCLUDED
#define PROTOBUF_C_benchmark_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1003002 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct _Benchmark__SubMessage Benchmark__SubMessage;
typedef struct _Benchmark__Message1 Benchmark__Message1;
typedef struct _Benchmark__Message2 Benchmark__Message2;
typedef struct _Benchmark__Message3 Benchmark__Message3;
typedef struct _Benchmark__Message3__SubMessage Benchmark__Message3__SubMessage;
typedef struct _Benchmark__Message Benchmark__Message;


/* --- enums --- */

typedef enum _Benchmark__Enum {
  BENCHMARK__ENUM__E0 = 0,
  BENCHMARK__ENUM__E1 = 1,
  BENCHMARK__ENUM__E2 = 2,
  BENCHMARK__ENUM__E3 = 3,
  BENCHMARK__ENUM__E5 = 5
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(BENCHMARK__ENUM)
} Benchmark__Enum;

/* --- messages --- */

struct  _Benchmark__SubMessage
{
  ProtobufCMessage base;
  uint32_t field1;
  uint32_t field2;
  int32_t field3;
  char *field15;
  ProtobufCBinaryData field12;
  int64_t field13;
  int64_t field14;
  uint64_t field21;
  int32_t field22;
  protobuf_c_boolean field206;
  uint32_t field203;
  int32_t field204;
  char *field205;
  uint64_t field207;
  Benchmark__Enum field300;
};
#define BENCHMARK__SUB_MESSAGE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&benchmark__sub_message__descriptor) \
    , 0, 0, 0, (char *)protobuf_c_empty_string, {0,NULL}, 0, 0, 0, 0, 0, 0, 0, (char *)protobuf_c_empty_string, 0, BENCHMARK__ENUM__E0 }


struct  _Benchmark__Message1
{
  ProtobufCMessage base;
  protobuf_c_boolean field80;
  protobuf_c_boolean field81;
  int32_t field2;
  int32_t field3;
  int32_t field280;
  int32_t field6;
  int64_t field22;
  size_t n_field4;
  char **field4;
  protobuf_c_boolean field59;
  int32_t field16;
  int32_t field150;
  int32_t field23;
  protobuf_c_boolean field24;
  int32_t field25;
  Benchmark__SubMessage *field15;
  protobuf_c_boolean field78;
  int32_t field67;
  int32_t field68;
  int32_t field128;
  char *field129;
  int32_t field131;
};
#define BENCHMARK__MESSAGE1__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&benchmark__message1__descriptor) \
    , 0, 0, 0, 0, 0, 0, 0, 0,NULL, 0, 0, 0, 0, 0, 0, NULL, 0, 0, 0, 0, (char *)protobuf_c_empty_string, 0 }


struct  _Benchmark__Message2
{
  ProtobufCMessage base;
  Benchmark__Enum field1;
  uint64_t field2;
  int32_t field3;
  char *field4;
  int32_t field5;
  protobuf_c_boolean field6;
};
#define BENCHMARK__MESSAGE2__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&benchmark__message2__descriptor) \
    , BENCHMARK__ENUM__E0, 0, 0, (char *)protobuf_c_empty_string, 0, 0 }


struct  _Benchmark__Message3__SubMessage
{
  ProtobufCMessage base;
  int32_t field28;
  int64_t field2;
  int32_t field12;
  char *field19;
  int32_t field11;
};
#define BENCHMARK__MESSAGE3__SUB_MESSAGE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&benchmark__message3__sub_message__descriptor) \
    , 0, 0, 0, (char *)protobuf_c_empty_string, 0 }


struct  _Benchmark__Message3
{
  ProtobufCMessage base;
  size_t n_field13;
  Benchmark__Message3__SubMessage **field13;
};
#define BENCHMARK__MESSAGE3__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&benchmark__message3__descriptor) \
    , 0,NULL }


typedef enum {
  BENCHMARK__MESSAGE__ONEOF__NOT_SET = 0,
  BENCHMARK__MESSAGE__ONEOF_MESSAGE1 = 1,
  BENCHMARK__MESSAGE__ONEOF_MESSAGE2 = 2,
  BENCHMARK__MESSAGE__ONEOF_MESSAGE3 = 7
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(BENCHMARK__MESSAGE__ONEOF)
} Benchmark__Message__OneofCase;

struct  _Benchmark__Message
{
  ProtobufCMessage base;
  Benchmark__Message__OneofCase oneof_case;
  union {
    Benchmark__Message1 *message1;
    Benchmark__Message2 *message2;
    Benchmark__Message3 *message3;
  };
};
#define BENCHMARK__MESSAGE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&benchmark__message__descriptor) \
    , BENCHMARK__MESSAGE__ONEOF__NOT_SET, {0} }


/* Benchmark__SubMessage methods */
void   benchmark__sub_message__init
                     (Benchmark__SubMessage         *message);
size_t benchmark__sub_message__get_packed_size
                     (const Benchmark__SubMessage   *message);
size_t benchmark__sub_message__pack
                     (const Benchmark__SubMessage   *message,
                      uint8_t             *out);
size_t benchmark__sub_message__pack_to_buffer
                     (const Benchmark__SubMessage   *message,
                      ProtobufCBuffer     *buffer);
Benchmark__SubMessage *
       benchmark__sub_message__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   benchmark__sub_message__free_unpacked
                     (Benchmark__SubMessage *message,
                      ProtobufCAllocator *allocator);
/* Benchmark__Message1 methods */
void   benchmark__message1__init
                     (Benchmark__Message1         *message);
size_t benchmark__message1__get_packed_size
                     (const Benchmark__Message1   *message);
size_t benchmark__message1__pack
                     (const Benchmark__Message1   *message,
                      uint8_t             *out);
size_t benchmark__message1__pack_to_buffer
                     (const Benchmark__Message1   *message,
                      ProtobufCBuffer     *buffer);
Benchmark__Message1 *
       benchmark__message1__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   benchmark__message1__free_unpacked
                     (Benchmark__Message1 *message,
                      ProtobufCAllocator *allocator);
/* Benchmark__Message2 methods */
void   benchmark__message2__init
                     (Benchmark__Message2         *message);
size_t benchmark__message2__get_packed_size
                     (const Benchmark__Message2   *message);
size_t benchmark__message2__pack
                     (const Benchmark__Message2   *message,
                      uint8_t             *out);
size_t benchmark__message2__pack_to_buffer
                     (const Benchmark__Message2   *message,
                      ProtobufCBuffer     *buffer);
Benchmark__Message2 *
       benchmark__message2__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   benchmark__message2__free_unpacked
                     (Benchmark__Message2 *message,
                      ProtobufCAllocator *allocator);
/* Benchmark__Message3__SubMessage methods */
void   benchmark__message3__sub_message__init
                     (Benchmark__Message3__SubMessage         *message);
/* Benchmark__Message3 methods */
void   benchmark__message3__init
                     (Benchmark__Message3         *message);
size_t benchmark__message3__get_packed_size
                     (const Benchmark__Message3   *message);
size_t benchmark__message3__pack
                     (const Benchmark__Message3   *message,
                      uint8_t             *out);
size_t benchmark__message3__pack_to_buffer
                     (const Benchmark__Message3   *message,
                      ProtobufCBuffer     *buffer);
Benchmark__Message3 *
       benchmark__message3__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   benchmark__message3__free_unpacked
                     (Benchmark__Message3 *message,
                      ProtobufCAllocator *allocator);
/* Benchmark__Message methods */
void   benchmark__message__init
                     (Benchmark__Message         *message);
size_t benchmark__message__get_packed_size
                     (const Benchmark__Message   *message);
size_t benchmark__message__pack
                     (const Benchmark__Message   *message,
                      uint8_t             *out);
size_t benchmark__message__pack_to_buffer
                     (const Benchmark__Message   *message,
                      ProtobufCBuffer     *buffer);
Benchmark__Message *
       benchmark__message__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   benchmark__message__free_unpacked
                     (Benchmark__Message *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Benchmark__SubMessage_Closure)
                 (const Benchmark__SubMessage *message,
                  void *closure_data);
typedef void (*Benchmark__Message1_Closure)
                 (const Benchmark__Message1 *message,
                  void *closure_data);
typedef void (*Benchmark__Message2_Closure)
                 (const Benchmark__Message2 *message,
                  void *closure_data);
typedef void (*Benchmark__Message3__SubMessage_Closure)
                 (const Benchmark__Message3__SubMessage *message,
                  void *closure_data);
typedef void (*Benchmark__Message3_Closure)
                 (const Benchmark__Message3 *message,
                  void *closure_data);
typedef void (*Benchmark__Message_Closure)
                 (const Benchmark__Message *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCEnumDescriptor    benchmark__enum__descriptor;
extern const ProtobufCMessageDescriptor benchmark__sub_message__descriptor;
extern const ProtobufCMessageDescriptor benchmark__message1__descriptor;
extern const ProtobufCMessageDescriptor benchmark__message2__descriptor;
extern const ProtobufCMessageDescriptor benchmark__message3__descriptor;
extern const ProtobufCMessageDescriptor benchmark__message3__sub_message__descriptor;
extern const ProtobufCMessageDescriptor benchmark__message__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_benchmark_2eproto__INCLUDED */
