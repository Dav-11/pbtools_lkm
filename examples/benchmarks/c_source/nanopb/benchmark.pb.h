/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.0-dev */

#ifndef PB_BENCHMARK_BENCHMARK_PB_H_INCLUDED
#define PB_BENCHMARK_BENCHMARK_PB_H_INCLUDED
#include "pb.h"

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _benchmark_Benchmark {
    int32_t v1;
/* @@protoc_insertion_point(struct:benchmark_Benchmark) */
} benchmark_Benchmark;


/* Initializer values for message structs */
#define benchmark_Benchmark_init_default         {0}
#define benchmark_Benchmark_init_zero            {0}

/* Field tags (for use in manual encoding/decoding) */
#define benchmark_Benchmark_v1_tag               1

/* Struct field encoding specification for nanopb */
#define benchmark_Benchmark_FIELDLIST(X, a) \
X(a, STATIC, SINGULAR, INT32, v1, 1)
#define benchmark_Benchmark_CALLBACK NULL
#define benchmark_Benchmark_DEFAULT NULL

extern const pb_msgdesc_t benchmark_Benchmark_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define benchmark_Benchmark_fields &benchmark_Benchmark_msg

/* Maximum encoded size of messages (where known) */
#define benchmark_Benchmark_size                 11

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
