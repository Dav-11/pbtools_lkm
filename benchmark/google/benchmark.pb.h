// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: benchmark.proto

#ifndef PROTOBUF_INCLUDED_benchmark_2eproto
#define PROTOBUF_INCLUDED_benchmark_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_benchmark_2eproto 

namespace protobuf_benchmark_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[6];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_benchmark_2eproto
namespace benchmark {
class Message;
class MessageDefaultTypeInternal;
extern MessageDefaultTypeInternal _Message_default_instance_;
class Message1;
class Message1DefaultTypeInternal;
extern Message1DefaultTypeInternal _Message1_default_instance_;
class Message2;
class Message2DefaultTypeInternal;
extern Message2DefaultTypeInternal _Message2_default_instance_;
class Message3;
class Message3DefaultTypeInternal;
extern Message3DefaultTypeInternal _Message3_default_instance_;
class Message3_SubMessage;
class Message3_SubMessageDefaultTypeInternal;
extern Message3_SubMessageDefaultTypeInternal _Message3_SubMessage_default_instance_;
class SubMessage;
class SubMessageDefaultTypeInternal;
extern SubMessageDefaultTypeInternal _SubMessage_default_instance_;
}  // namespace benchmark
namespace google {
namespace protobuf {
template<> ::benchmark::Message* Arena::CreateMaybeMessage<::benchmark::Message>(Arena*);
template<> ::benchmark::Message1* Arena::CreateMaybeMessage<::benchmark::Message1>(Arena*);
template<> ::benchmark::Message2* Arena::CreateMaybeMessage<::benchmark::Message2>(Arena*);
template<> ::benchmark::Message3* Arena::CreateMaybeMessage<::benchmark::Message3>(Arena*);
template<> ::benchmark::Message3_SubMessage* Arena::CreateMaybeMessage<::benchmark::Message3_SubMessage>(Arena*);
template<> ::benchmark::SubMessage* Arena::CreateMaybeMessage<::benchmark::SubMessage>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace benchmark {

enum Enum {
  E0 = 0,
  E1 = 1,
  E2 = 2,
  E3 = 3,
  E5 = 5,
  Enum_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Enum_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Enum_IsValid(int value);
const Enum Enum_MIN = E0;
const Enum Enum_MAX = E5;
const int Enum_ARRAYSIZE = Enum_MAX + 1;

const ::google::protobuf::EnumDescriptor* Enum_descriptor();
inline const ::std::string& Enum_Name(Enum value) {
  return ::google::protobuf::internal::NameOfEnum(
    Enum_descriptor(), value);
}
inline bool Enum_Parse(
    const ::std::string& name, Enum* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Enum>(
    Enum_descriptor(), name, value);
}
// ===================================================================

class SubMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:benchmark.SubMessage) */ {
 public:
  SubMessage();
  virtual ~SubMessage();

  SubMessage(const SubMessage& from);

  inline SubMessage& operator=(const SubMessage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SubMessage(SubMessage&& from) noexcept
    : SubMessage() {
    *this = ::std::move(from);
  }

  inline SubMessage& operator=(SubMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const SubMessage& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SubMessage* internal_default_instance() {
    return reinterpret_cast<const SubMessage*>(
               &_SubMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void UnsafeArenaSwap(SubMessage* other);
  void Swap(SubMessage* other);
  friend void swap(SubMessage& a, SubMessage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SubMessage* New() const final {
    return CreateMaybeMessage<SubMessage>(NULL);
  }

  SubMessage* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SubMessage>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SubMessage& from);
  void MergeFrom(const SubMessage& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SubMessage* other);
  protected:
  explicit SubMessage(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes field12 = 12;
  void clear_field12();
  static const int kField12FieldNumber = 12;
  const ::std::string& field12() const;
  void set_field12(const ::std::string& value);
  #if LANG_CXX11
  void set_field12(::std::string&& value);
  #endif
  void set_field12(const char* value);
  void set_field12(const void* value, size_t size);
  ::std::string* mutable_field12();
  ::std::string* release_field12();
  void set_allocated_field12(::std::string* field12);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_field12();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_field12(
      ::std::string* field12);

  // string field15 = 15;
  void clear_field15();
  static const int kField15FieldNumber = 15;
  const ::std::string& field15() const;
  void set_field15(const ::std::string& value);
  #if LANG_CXX11
  void set_field15(::std::string&& value);
  #endif
  void set_field15(const char* value);
  void set_field15(const char* value, size_t size);
  ::std::string* mutable_field15();
  ::std::string* release_field15();
  void set_allocated_field15(::std::string* field15);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_field15();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_field15(
      ::std::string* field15);

  // string field205 = 205;
  void clear_field205();
  static const int kField205FieldNumber = 205;
  const ::std::string& field205() const;
  void set_field205(const ::std::string& value);
  #if LANG_CXX11
  void set_field205(::std::string&& value);
  #endif
  void set_field205(const char* value);
  void set_field205(const char* value, size_t size);
  ::std::string* mutable_field205();
  ::std::string* release_field205();
  void set_allocated_field205(::std::string* field205);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_field205();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_field205(
      ::std::string* field205);

  // uint32 field1 = 1;
  void clear_field1();
  static const int kField1FieldNumber = 1;
  ::google::protobuf::uint32 field1() const;
  void set_field1(::google::protobuf::uint32 value);

  // uint32 field2 = 2;
  void clear_field2();
  static const int kField2FieldNumber = 2;
  ::google::protobuf::uint32 field2() const;
  void set_field2(::google::protobuf::uint32 value);

  // int32 field3 = 3;
  void clear_field3();
  static const int kField3FieldNumber = 3;
  ::google::protobuf::int32 field3() const;
  void set_field3(::google::protobuf::int32 value);

  // int32 field22 = 22;
  void clear_field22();
  static const int kField22FieldNumber = 22;
  ::google::protobuf::int32 field22() const;
  void set_field22(::google::protobuf::int32 value);

  // int64 field13 = 13;
  void clear_field13();
  static const int kField13FieldNumber = 13;
  ::google::protobuf::int64 field13() const;
  void set_field13(::google::protobuf::int64 value);

  // int64 field14 = 14;
  void clear_field14();
  static const int kField14FieldNumber = 14;
  ::google::protobuf::int64 field14() const;
  void set_field14(::google::protobuf::int64 value);

  // fixed64 field21 = 21;
  void clear_field21();
  static const int kField21FieldNumber = 21;
  ::google::protobuf::uint64 field21() const;
  void set_field21(::google::protobuf::uint64 value);

  // fixed32 field203 = 203;
  void clear_field203();
  static const int kField203FieldNumber = 203;
  ::google::protobuf::uint32 field203() const;
  void set_field203(::google::protobuf::uint32 value);

  // int32 field204 = 204;
  void clear_field204();
  static const int kField204FieldNumber = 204;
  ::google::protobuf::int32 field204() const;
  void set_field204(::google::protobuf::int32 value);

  // uint64 field207 = 207;
  void clear_field207();
  static const int kField207FieldNumber = 207;
  ::google::protobuf::uint64 field207() const;
  void set_field207(::google::protobuf::uint64 value);

  // bool field206 = 206;
  void clear_field206();
  static const int kField206FieldNumber = 206;
  bool field206() const;
  void set_field206(bool value);

  // .benchmark.Enum field300 = 300;
  void clear_field300();
  static const int kField300FieldNumber = 300;
  ::benchmark::Enum field300() const;
  void set_field300(::benchmark::Enum value);

  // @@protoc_insertion_point(class_scope:benchmark.SubMessage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr field12_;
  ::google::protobuf::internal::ArenaStringPtr field15_;
  ::google::protobuf::internal::ArenaStringPtr field205_;
  ::google::protobuf::uint32 field1_;
  ::google::protobuf::uint32 field2_;
  ::google::protobuf::int32 field3_;
  ::google::protobuf::int32 field22_;
  ::google::protobuf::int64 field13_;
  ::google::protobuf::int64 field14_;
  ::google::protobuf::uint64 field21_;
  ::google::protobuf::uint32 field203_;
  ::google::protobuf::int32 field204_;
  ::google::protobuf::uint64 field207_;
  bool field206_;
  int field300_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_benchmark_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Message1 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:benchmark.Message1) */ {
 public:
  Message1();
  virtual ~Message1();

  Message1(const Message1& from);

  inline Message1& operator=(const Message1& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Message1(Message1&& from) noexcept
    : Message1() {
    *this = ::std::move(from);
  }

  inline Message1& operator=(Message1&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const Message1& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Message1* internal_default_instance() {
    return reinterpret_cast<const Message1*>(
               &_Message1_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void UnsafeArenaSwap(Message1* other);
  void Swap(Message1* other);
  friend void swap(Message1& a, Message1& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Message1* New() const final {
    return CreateMaybeMessage<Message1>(NULL);
  }

  Message1* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Message1>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Message1& from);
  void MergeFrom(const Message1& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Message1* other);
  protected:
  explicit Message1(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string field4 = 4;
  int field4_size() const;
  void clear_field4();
  static const int kField4FieldNumber = 4;
  const ::std::string& field4(int index) const;
  ::std::string* mutable_field4(int index);
  void set_field4(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_field4(int index, ::std::string&& value);
  #endif
  void set_field4(int index, const char* value);
  void set_field4(int index, const char* value, size_t size);
  ::std::string* add_field4();
  void add_field4(const ::std::string& value);
  #if LANG_CXX11
  void add_field4(::std::string&& value);
  #endif
  void add_field4(const char* value);
  void add_field4(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& field4() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_field4();

  // string field129 = 129;
  void clear_field129();
  static const int kField129FieldNumber = 129;
  const ::std::string& field129() const;
  void set_field129(const ::std::string& value);
  #if LANG_CXX11
  void set_field129(::std::string&& value);
  #endif
  void set_field129(const char* value);
  void set_field129(const char* value, size_t size);
  ::std::string* mutable_field129();
  ::std::string* release_field129();
  void set_allocated_field129(::std::string* field129);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_field129();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_field129(
      ::std::string* field129);

  // .benchmark.SubMessage field15 = 15;
  bool has_field15() const;
  void clear_field15();
  static const int kField15FieldNumber = 15;
  private:
  const ::benchmark::SubMessage& _internal_field15() const;
  public:
  const ::benchmark::SubMessage& field15() const;
  ::benchmark::SubMessage* release_field15();
  ::benchmark::SubMessage* mutable_field15();
  void set_allocated_field15(::benchmark::SubMessage* field15);
  void unsafe_arena_set_allocated_field15(
      ::benchmark::SubMessage* field15);
  ::benchmark::SubMessage* unsafe_arena_release_field15();

  // int32 field2 = 2;
  void clear_field2();
  static const int kField2FieldNumber = 2;
  ::google::protobuf::int32 field2() const;
  void set_field2(::google::protobuf::int32 value);

  // int32 field3 = 3;
  void clear_field3();
  static const int kField3FieldNumber = 3;
  ::google::protobuf::int32 field3() const;
  void set_field3(::google::protobuf::int32 value);

  // int32 field6 = 6;
  void clear_field6();
  static const int kField6FieldNumber = 6;
  ::google::protobuf::int32 field6() const;
  void set_field6(::google::protobuf::int32 value);

  // int32 field16 = 16;
  void clear_field16();
  static const int kField16FieldNumber = 16;
  ::google::protobuf::int32 field16() const;
  void set_field16(::google::protobuf::int32 value);

  // int64 field22 = 22;
  void clear_field22();
  static const int kField22FieldNumber = 22;
  ::google::protobuf::int64 field22() const;
  void set_field22(::google::protobuf::int64 value);

  // int32 field23 = 23;
  void clear_field23();
  static const int kField23FieldNumber = 23;
  ::google::protobuf::int32 field23() const;
  void set_field23(::google::protobuf::int32 value);

  // int32 field25 = 25;
  void clear_field25();
  static const int kField25FieldNumber = 25;
  ::google::protobuf::int32 field25() const;
  void set_field25(::google::protobuf::int32 value);

  // bool field80 = 80;
  void clear_field80();
  static const int kField80FieldNumber = 80;
  bool field80() const;
  void set_field80(bool value);

  // bool field81 = 81;
  void clear_field81();
  static const int kField81FieldNumber = 81;
  bool field81() const;
  void set_field81(bool value);

  // bool field59 = 59;
  void clear_field59();
  static const int kField59FieldNumber = 59;
  bool field59() const;
  void set_field59(bool value);

  // bool field24 = 24;
  void clear_field24();
  static const int kField24FieldNumber = 24;
  bool field24() const;
  void set_field24(bool value);

  // int32 field67 = 67;
  void clear_field67();
  static const int kField67FieldNumber = 67;
  ::google::protobuf::int32 field67() const;
  void set_field67(::google::protobuf::int32 value);

  // int32 field68 = 68;
  void clear_field68();
  static const int kField68FieldNumber = 68;
  ::google::protobuf::int32 field68() const;
  void set_field68(::google::protobuf::int32 value);

  // bool field78 = 78;
  void clear_field78();
  static const int kField78FieldNumber = 78;
  bool field78() const;
  void set_field78(bool value);

  // int32 field128 = 128;
  void clear_field128();
  static const int kField128FieldNumber = 128;
  ::google::protobuf::int32 field128() const;
  void set_field128(::google::protobuf::int32 value);

  // int32 field131 = 131;
  void clear_field131();
  static const int kField131FieldNumber = 131;
  ::google::protobuf::int32 field131() const;
  void set_field131(::google::protobuf::int32 value);

  // int32 field150 = 150;
  void clear_field150();
  static const int kField150FieldNumber = 150;
  ::google::protobuf::int32 field150() const;
  void set_field150(::google::protobuf::int32 value);

  // int32 field280 = 280;
  void clear_field280();
  static const int kField280FieldNumber = 280;
  ::google::protobuf::int32 field280() const;
  void set_field280(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:benchmark.Message1)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedPtrField< ::std::string> field4_;
  ::google::protobuf::internal::ArenaStringPtr field129_;
  ::benchmark::SubMessage* field15_;
  ::google::protobuf::int32 field2_;
  ::google::protobuf::int32 field3_;
  ::google::protobuf::int32 field6_;
  ::google::protobuf::int32 field16_;
  ::google::protobuf::int64 field22_;
  ::google::protobuf::int32 field23_;
  ::google::protobuf::int32 field25_;
  bool field80_;
  bool field81_;
  bool field59_;
  bool field24_;
  ::google::protobuf::int32 field67_;
  ::google::protobuf::int32 field68_;
  bool field78_;
  ::google::protobuf::int32 field128_;
  ::google::protobuf::int32 field131_;
  ::google::protobuf::int32 field150_;
  ::google::protobuf::int32 field280_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_benchmark_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Message2 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:benchmark.Message2) */ {
 public:
  Message2();
  virtual ~Message2();

  Message2(const Message2& from);

  inline Message2& operator=(const Message2& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Message2(Message2&& from) noexcept
    : Message2() {
    *this = ::std::move(from);
  }

  inline Message2& operator=(Message2&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const Message2& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Message2* internal_default_instance() {
    return reinterpret_cast<const Message2*>(
               &_Message2_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void UnsafeArenaSwap(Message2* other);
  void Swap(Message2* other);
  friend void swap(Message2& a, Message2& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Message2* New() const final {
    return CreateMaybeMessage<Message2>(NULL);
  }

  Message2* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Message2>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Message2& from);
  void MergeFrom(const Message2& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Message2* other);
  protected:
  explicit Message2(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string field4 = 4;
  void clear_field4();
  static const int kField4FieldNumber = 4;
  const ::std::string& field4() const;
  void set_field4(const ::std::string& value);
  #if LANG_CXX11
  void set_field4(::std::string&& value);
  #endif
  void set_field4(const char* value);
  void set_field4(const char* value, size_t size);
  ::std::string* mutable_field4();
  ::std::string* release_field4();
  void set_allocated_field4(::std::string* field4);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_field4();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_field4(
      ::std::string* field4);

  // uint64 field2 = 2;
  void clear_field2();
  static const int kField2FieldNumber = 2;
  ::google::protobuf::uint64 field2() const;
  void set_field2(::google::protobuf::uint64 value);

  // .benchmark.Enum field1 = 1;
  void clear_field1();
  static const int kField1FieldNumber = 1;
  ::benchmark::Enum field1() const;
  void set_field1(::benchmark::Enum value);

  // sint32 field3 = 3;
  void clear_field3();
  static const int kField3FieldNumber = 3;
  ::google::protobuf::int32 field3() const;
  void set_field3(::google::protobuf::int32 value);

  // int32 field5 = 5;
  void clear_field5();
  static const int kField5FieldNumber = 5;
  ::google::protobuf::int32 field5() const;
  void set_field5(::google::protobuf::int32 value);

  // bool field6 = 6;
  void clear_field6();
  static const int kField6FieldNumber = 6;
  bool field6() const;
  void set_field6(bool value);

  // @@protoc_insertion_point(class_scope:benchmark.Message2)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr field4_;
  ::google::protobuf::uint64 field2_;
  int field1_;
  ::google::protobuf::int32 field3_;
  ::google::protobuf::int32 field5_;
  bool field6_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_benchmark_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Message3_SubMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:benchmark.Message3.SubMessage) */ {
 public:
  Message3_SubMessage();
  virtual ~Message3_SubMessage();

  Message3_SubMessage(const Message3_SubMessage& from);

  inline Message3_SubMessage& operator=(const Message3_SubMessage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Message3_SubMessage(Message3_SubMessage&& from) noexcept
    : Message3_SubMessage() {
    *this = ::std::move(from);
  }

  inline Message3_SubMessage& operator=(Message3_SubMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const Message3_SubMessage& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Message3_SubMessage* internal_default_instance() {
    return reinterpret_cast<const Message3_SubMessage*>(
               &_Message3_SubMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void UnsafeArenaSwap(Message3_SubMessage* other);
  void Swap(Message3_SubMessage* other);
  friend void swap(Message3_SubMessage& a, Message3_SubMessage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Message3_SubMessage* New() const final {
    return CreateMaybeMessage<Message3_SubMessage>(NULL);
  }

  Message3_SubMessage* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Message3_SubMessage>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Message3_SubMessage& from);
  void MergeFrom(const Message3_SubMessage& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Message3_SubMessage* other);
  protected:
  explicit Message3_SubMessage(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string field19 = 19;
  void clear_field19();
  static const int kField19FieldNumber = 19;
  const ::std::string& field19() const;
  void set_field19(const ::std::string& value);
  #if LANG_CXX11
  void set_field19(::std::string&& value);
  #endif
  void set_field19(const char* value);
  void set_field19(const char* value, size_t size);
  ::std::string* mutable_field19();
  ::std::string* release_field19();
  void set_allocated_field19(::std::string* field19);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_field19();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_field19(
      ::std::string* field19);

  // int64 field2 = 2;
  void clear_field2();
  static const int kField2FieldNumber = 2;
  ::google::protobuf::int64 field2() const;
  void set_field2(::google::protobuf::int64 value);

  // int32 field28 = 28;
  void clear_field28();
  static const int kField28FieldNumber = 28;
  ::google::protobuf::int32 field28() const;
  void set_field28(::google::protobuf::int32 value);

  // int32 field11 = 11;
  void clear_field11();
  static const int kField11FieldNumber = 11;
  ::google::protobuf::int32 field11() const;
  void set_field11(::google::protobuf::int32 value);

  // int32 field12 = 12;
  void clear_field12();
  static const int kField12FieldNumber = 12;
  ::google::protobuf::int32 field12() const;
  void set_field12(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:benchmark.Message3.SubMessage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr field19_;
  ::google::protobuf::int64 field2_;
  ::google::protobuf::int32 field28_;
  ::google::protobuf::int32 field11_;
  ::google::protobuf::int32 field12_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_benchmark_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Message3 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:benchmark.Message3) */ {
 public:
  Message3();
  virtual ~Message3();

  Message3(const Message3& from);

  inline Message3& operator=(const Message3& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Message3(Message3&& from) noexcept
    : Message3() {
    *this = ::std::move(from);
  }

  inline Message3& operator=(Message3&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const Message3& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Message3* internal_default_instance() {
    return reinterpret_cast<const Message3*>(
               &_Message3_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void UnsafeArenaSwap(Message3* other);
  void Swap(Message3* other);
  friend void swap(Message3& a, Message3& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Message3* New() const final {
    return CreateMaybeMessage<Message3>(NULL);
  }

  Message3* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Message3>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Message3& from);
  void MergeFrom(const Message3& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Message3* other);
  protected:
  explicit Message3(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef Message3_SubMessage SubMessage;

  // accessors -------------------------------------------------------

  // repeated .benchmark.Message3.SubMessage field13 = 13;
  int field13_size() const;
  void clear_field13();
  static const int kField13FieldNumber = 13;
  ::benchmark::Message3_SubMessage* mutable_field13(int index);
  ::google::protobuf::RepeatedPtrField< ::benchmark::Message3_SubMessage >*
      mutable_field13();
  const ::benchmark::Message3_SubMessage& field13(int index) const;
  ::benchmark::Message3_SubMessage* add_field13();
  const ::google::protobuf::RepeatedPtrField< ::benchmark::Message3_SubMessage >&
      field13() const;

  // @@protoc_insertion_point(class_scope:benchmark.Message3)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedPtrField< ::benchmark::Message3_SubMessage > field13_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_benchmark_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Message : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:benchmark.Message) */ {
 public:
  Message();
  virtual ~Message();

  Message(const Message& from);

  inline Message& operator=(const Message& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Message(Message&& from) noexcept
    : Message() {
    *this = ::std::move(from);
  }

  inline Message& operator=(Message&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const Message& default_instance();

  enum OneofCase {
    kMessage1 = 1,
    kMessage2 = 2,
    kMessage3 = 7,
    ONEOF_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Message* internal_default_instance() {
    return reinterpret_cast<const Message*>(
               &_Message_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void UnsafeArenaSwap(Message* other);
  void Swap(Message* other);
  friend void swap(Message& a, Message& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Message* New() const final {
    return CreateMaybeMessage<Message>(NULL);
  }

  Message* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Message>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Message& from);
  void MergeFrom(const Message& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Message* other);
  protected:
  explicit Message(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .benchmark.Message1 message1 = 1;
  bool has_message1() const;
  void clear_message1();
  static const int kMessage1FieldNumber = 1;
  private:
  const ::benchmark::Message1& _internal_message1() const;
  public:
  const ::benchmark::Message1& message1() const;
  ::benchmark::Message1* release_message1();
  ::benchmark::Message1* mutable_message1();
  void set_allocated_message1(::benchmark::Message1* message1);
  void unsafe_arena_set_allocated_message1(
      ::benchmark::Message1* message1);
  ::benchmark::Message1* unsafe_arena_release_message1();

  // .benchmark.Message2 message2 = 2;
  bool has_message2() const;
  void clear_message2();
  static const int kMessage2FieldNumber = 2;
  private:
  const ::benchmark::Message2& _internal_message2() const;
  public:
  const ::benchmark::Message2& message2() const;
  ::benchmark::Message2* release_message2();
  ::benchmark::Message2* mutable_message2();
  void set_allocated_message2(::benchmark::Message2* message2);
  void unsafe_arena_set_allocated_message2(
      ::benchmark::Message2* message2);
  ::benchmark::Message2* unsafe_arena_release_message2();

  // .benchmark.Message3 message3 = 7;
  bool has_message3() const;
  void clear_message3();
  static const int kMessage3FieldNumber = 7;
  private:
  const ::benchmark::Message3& _internal_message3() const;
  public:
  const ::benchmark::Message3& message3() const;
  ::benchmark::Message3* release_message3();
  ::benchmark::Message3* mutable_message3();
  void set_allocated_message3(::benchmark::Message3* message3);
  void unsafe_arena_set_allocated_message3(
      ::benchmark::Message3* message3);
  ::benchmark::Message3* unsafe_arena_release_message3();

  void clear_oneof();
  OneofCase oneof_case() const;
  // @@protoc_insertion_point(class_scope:benchmark.Message)
 private:
  void set_has_message1();
  void set_has_message2();
  void set_has_message3();

  inline bool has_oneof() const;
  inline void clear_has_oneof();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  union OneofUnion {
    OneofUnion() {}
    ::benchmark::Message1* message1_;
    ::benchmark::Message2* message2_;
    ::benchmark::Message3* message3_;
  } oneof_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::protobuf_benchmark_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// SubMessage

// uint32 field1 = 1;
inline void SubMessage::clear_field1() {
  field1_ = 0u;
}
inline ::google::protobuf::uint32 SubMessage::field1() const {
  // @@protoc_insertion_point(field_get:benchmark.SubMessage.field1)
  return field1_;
}
inline void SubMessage::set_field1(::google::protobuf::uint32 value) {
  
  field1_ = value;
  // @@protoc_insertion_point(field_set:benchmark.SubMessage.field1)
}

// uint32 field2 = 2;
inline void SubMessage::clear_field2() {
  field2_ = 0u;
}
inline ::google::protobuf::uint32 SubMessage::field2() const {
  // @@protoc_insertion_point(field_get:benchmark.SubMessage.field2)
  return field2_;
}
inline void SubMessage::set_field2(::google::protobuf::uint32 value) {
  
  field2_ = value;
  // @@protoc_insertion_point(field_set:benchmark.SubMessage.field2)
}

// int32 field3 = 3;
inline void SubMessage::clear_field3() {
  field3_ = 0;
}
inline ::google::protobuf::int32 SubMessage::field3() const {
  // @@protoc_insertion_point(field_get:benchmark.SubMessage.field3)
  return field3_;
}
inline void SubMessage::set_field3(::google::protobuf::int32 value) {
  
  field3_ = value;
  // @@protoc_insertion_point(field_set:benchmark.SubMessage.field3)
}

// string field15 = 15;
inline void SubMessage::clear_field15() {
  field15_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& SubMessage::field15() const {
  // @@protoc_insertion_point(field_get:benchmark.SubMessage.field15)
  return field15_.Get();
}
inline void SubMessage::set_field15(const ::std::string& value) {
  
  field15_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:benchmark.SubMessage.field15)
}
#if LANG_CXX11
inline void SubMessage::set_field15(::std::string&& value) {
  
  field15_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:benchmark.SubMessage.field15)
}
#endif
inline void SubMessage::set_field15(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  field15_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:benchmark.SubMessage.field15)
}
inline void SubMessage::set_field15(const char* value,
    size_t size) {
  
  field15_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:benchmark.SubMessage.field15)
}
inline ::std::string* SubMessage::mutable_field15() {
  
  // @@protoc_insertion_point(field_mutable:benchmark.SubMessage.field15)
  return field15_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* SubMessage::release_field15() {
  // @@protoc_insertion_point(field_release:benchmark.SubMessage.field15)
  
  return field15_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void SubMessage::set_allocated_field15(::std::string* field15) {
  if (field15 != NULL) {
    
  } else {
    
  }
  field15_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), field15,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:benchmark.SubMessage.field15)
}
inline ::std::string* SubMessage::unsafe_arena_release_field15() {
  // @@protoc_insertion_point(field_unsafe_arena_release:benchmark.SubMessage.field15)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return field15_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void SubMessage::unsafe_arena_set_allocated_field15(
    ::std::string* field15) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (field15 != NULL) {
    
  } else {
    
  }
  field15_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      field15, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:benchmark.SubMessage.field15)
}

// bytes field12 = 12;
inline void SubMessage::clear_field12() {
  field12_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& SubMessage::field12() const {
  // @@protoc_insertion_point(field_get:benchmark.SubMessage.field12)
  return field12_.Get();
}
inline void SubMessage::set_field12(const ::std::string& value) {
  
  field12_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:benchmark.SubMessage.field12)
}
#if LANG_CXX11
inline void SubMessage::set_field12(::std::string&& value) {
  
  field12_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:benchmark.SubMessage.field12)
}
#endif
inline void SubMessage::set_field12(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  field12_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:benchmark.SubMessage.field12)
}
inline void SubMessage::set_field12(const void* value,
    size_t size) {
  
  field12_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:benchmark.SubMessage.field12)
}
inline ::std::string* SubMessage::mutable_field12() {
  
  // @@protoc_insertion_point(field_mutable:benchmark.SubMessage.field12)
  return field12_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* SubMessage::release_field12() {
  // @@protoc_insertion_point(field_release:benchmark.SubMessage.field12)
  
  return field12_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void SubMessage::set_allocated_field12(::std::string* field12) {
  if (field12 != NULL) {
    
  } else {
    
  }
  field12_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), field12,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:benchmark.SubMessage.field12)
}
inline ::std::string* SubMessage::unsafe_arena_release_field12() {
  // @@protoc_insertion_point(field_unsafe_arena_release:benchmark.SubMessage.field12)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return field12_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void SubMessage::unsafe_arena_set_allocated_field12(
    ::std::string* field12) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (field12 != NULL) {
    
  } else {
    
  }
  field12_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      field12, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:benchmark.SubMessage.field12)
}

// int64 field13 = 13;
inline void SubMessage::clear_field13() {
  field13_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 SubMessage::field13() const {
  // @@protoc_insertion_point(field_get:benchmark.SubMessage.field13)
  return field13_;
}
inline void SubMessage::set_field13(::google::protobuf::int64 value) {
  
  field13_ = value;
  // @@protoc_insertion_point(field_set:benchmark.SubMessage.field13)
}

// int64 field14 = 14;
inline void SubMessage::clear_field14() {
  field14_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 SubMessage::field14() const {
  // @@protoc_insertion_point(field_get:benchmark.SubMessage.field14)
  return field14_;
}
inline void SubMessage::set_field14(::google::protobuf::int64 value) {
  
  field14_ = value;
  // @@protoc_insertion_point(field_set:benchmark.SubMessage.field14)
}

// fixed64 field21 = 21;
inline void SubMessage::clear_field21() {
  field21_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 SubMessage::field21() const {
  // @@protoc_insertion_point(field_get:benchmark.SubMessage.field21)
  return field21_;
}
inline void SubMessage::set_field21(::google::protobuf::uint64 value) {
  
  field21_ = value;
  // @@protoc_insertion_point(field_set:benchmark.SubMessage.field21)
}

// int32 field22 = 22;
inline void SubMessage::clear_field22() {
  field22_ = 0;
}
inline ::google::protobuf::int32 SubMessage::field22() const {
  // @@protoc_insertion_point(field_get:benchmark.SubMessage.field22)
  return field22_;
}
inline void SubMessage::set_field22(::google::protobuf::int32 value) {
  
  field22_ = value;
  // @@protoc_insertion_point(field_set:benchmark.SubMessage.field22)
}

// bool field206 = 206;
inline void SubMessage::clear_field206() {
  field206_ = false;
}
inline bool SubMessage::field206() const {
  // @@protoc_insertion_point(field_get:benchmark.SubMessage.field206)
  return field206_;
}
inline void SubMessage::set_field206(bool value) {
  
  field206_ = value;
  // @@protoc_insertion_point(field_set:benchmark.SubMessage.field206)
}

// fixed32 field203 = 203;
inline void SubMessage::clear_field203() {
  field203_ = 0u;
}
inline ::google::protobuf::uint32 SubMessage::field203() const {
  // @@protoc_insertion_point(field_get:benchmark.SubMessage.field203)
  return field203_;
}
inline void SubMessage::set_field203(::google::protobuf::uint32 value) {
  
  field203_ = value;
  // @@protoc_insertion_point(field_set:benchmark.SubMessage.field203)
}

// int32 field204 = 204;
inline void SubMessage::clear_field204() {
  field204_ = 0;
}
inline ::google::protobuf::int32 SubMessage::field204() const {
  // @@protoc_insertion_point(field_get:benchmark.SubMessage.field204)
  return field204_;
}
inline void SubMessage::set_field204(::google::protobuf::int32 value) {
  
  field204_ = value;
  // @@protoc_insertion_point(field_set:benchmark.SubMessage.field204)
}

// string field205 = 205;
inline void SubMessage::clear_field205() {
  field205_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& SubMessage::field205() const {
  // @@protoc_insertion_point(field_get:benchmark.SubMessage.field205)
  return field205_.Get();
}
inline void SubMessage::set_field205(const ::std::string& value) {
  
  field205_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:benchmark.SubMessage.field205)
}
#if LANG_CXX11
inline void SubMessage::set_field205(::std::string&& value) {
  
  field205_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:benchmark.SubMessage.field205)
}
#endif
inline void SubMessage::set_field205(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  field205_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:benchmark.SubMessage.field205)
}
inline void SubMessage::set_field205(const char* value,
    size_t size) {
  
  field205_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:benchmark.SubMessage.field205)
}
inline ::std::string* SubMessage::mutable_field205() {
  
  // @@protoc_insertion_point(field_mutable:benchmark.SubMessage.field205)
  return field205_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* SubMessage::release_field205() {
  // @@protoc_insertion_point(field_release:benchmark.SubMessage.field205)
  
  return field205_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void SubMessage::set_allocated_field205(::std::string* field205) {
  if (field205 != NULL) {
    
  } else {
    
  }
  field205_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), field205,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:benchmark.SubMessage.field205)
}
inline ::std::string* SubMessage::unsafe_arena_release_field205() {
  // @@protoc_insertion_point(field_unsafe_arena_release:benchmark.SubMessage.field205)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return field205_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void SubMessage::unsafe_arena_set_allocated_field205(
    ::std::string* field205) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (field205 != NULL) {
    
  } else {
    
  }
  field205_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      field205, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:benchmark.SubMessage.field205)
}

// uint64 field207 = 207;
inline void SubMessage::clear_field207() {
  field207_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 SubMessage::field207() const {
  // @@protoc_insertion_point(field_get:benchmark.SubMessage.field207)
  return field207_;
}
inline void SubMessage::set_field207(::google::protobuf::uint64 value) {
  
  field207_ = value;
  // @@protoc_insertion_point(field_set:benchmark.SubMessage.field207)
}

// .benchmark.Enum field300 = 300;
inline void SubMessage::clear_field300() {
  field300_ = 0;
}
inline ::benchmark::Enum SubMessage::field300() const {
  // @@protoc_insertion_point(field_get:benchmark.SubMessage.field300)
  return static_cast< ::benchmark::Enum >(field300_);
}
inline void SubMessage::set_field300(::benchmark::Enum value) {
  
  field300_ = value;
  // @@protoc_insertion_point(field_set:benchmark.SubMessage.field300)
}

// -------------------------------------------------------------------

// Message1

// bool field80 = 80;
inline void Message1::clear_field80() {
  field80_ = false;
}
inline bool Message1::field80() const {
  // @@protoc_insertion_point(field_get:benchmark.Message1.field80)
  return field80_;
}
inline void Message1::set_field80(bool value) {
  
  field80_ = value;
  // @@protoc_insertion_point(field_set:benchmark.Message1.field80)
}

// bool field81 = 81;
inline void Message1::clear_field81() {
  field81_ = false;
}
inline bool Message1::field81() const {
  // @@protoc_insertion_point(field_get:benchmark.Message1.field81)
  return field81_;
}
inline void Message1::set_field81(bool value) {
  
  field81_ = value;
  // @@protoc_insertion_point(field_set:benchmark.Message1.field81)
}

// int32 field2 = 2;
inline void Message1::clear_field2() {
  field2_ = 0;
}
inline ::google::protobuf::int32 Message1::field2() const {
  // @@protoc_insertion_point(field_get:benchmark.Message1.field2)
  return field2_;
}
inline void Message1::set_field2(::google::protobuf::int32 value) {
  
  field2_ = value;
  // @@protoc_insertion_point(field_set:benchmark.Message1.field2)
}

// int32 field3 = 3;
inline void Message1::clear_field3() {
  field3_ = 0;
}
inline ::google::protobuf::int32 Message1::field3() const {
  // @@protoc_insertion_point(field_get:benchmark.Message1.field3)
  return field3_;
}
inline void Message1::set_field3(::google::protobuf::int32 value) {
  
  field3_ = value;
  // @@protoc_insertion_point(field_set:benchmark.Message1.field3)
}

// int32 field280 = 280;
inline void Message1::clear_field280() {
  field280_ = 0;
}
inline ::google::protobuf::int32 Message1::field280() const {
  // @@protoc_insertion_point(field_get:benchmark.Message1.field280)
  return field280_;
}
inline void Message1::set_field280(::google::protobuf::int32 value) {
  
  field280_ = value;
  // @@protoc_insertion_point(field_set:benchmark.Message1.field280)
}

// int32 field6 = 6;
inline void Message1::clear_field6() {
  field6_ = 0;
}
inline ::google::protobuf::int32 Message1::field6() const {
  // @@protoc_insertion_point(field_get:benchmark.Message1.field6)
  return field6_;
}
inline void Message1::set_field6(::google::protobuf::int32 value) {
  
  field6_ = value;
  // @@protoc_insertion_point(field_set:benchmark.Message1.field6)
}

// int64 field22 = 22;
inline void Message1::clear_field22() {
  field22_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Message1::field22() const {
  // @@protoc_insertion_point(field_get:benchmark.Message1.field22)
  return field22_;
}
inline void Message1::set_field22(::google::protobuf::int64 value) {
  
  field22_ = value;
  // @@protoc_insertion_point(field_set:benchmark.Message1.field22)
}

// repeated string field4 = 4;
inline int Message1::field4_size() const {
  return field4_.size();
}
inline void Message1::clear_field4() {
  field4_.Clear();
}
inline const ::std::string& Message1::field4(int index) const {
  // @@protoc_insertion_point(field_get:benchmark.Message1.field4)
  return field4_.Get(index);
}
inline ::std::string* Message1::mutable_field4(int index) {
  // @@protoc_insertion_point(field_mutable:benchmark.Message1.field4)
  return field4_.Mutable(index);
}
inline void Message1::set_field4(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:benchmark.Message1.field4)
  field4_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void Message1::set_field4(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:benchmark.Message1.field4)
  field4_.Mutable(index)->assign(std::move(value));
}
#endif
inline void Message1::set_field4(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  field4_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:benchmark.Message1.field4)
}
inline void Message1::set_field4(int index, const char* value, size_t size) {
  field4_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:benchmark.Message1.field4)
}
inline ::std::string* Message1::add_field4() {
  // @@protoc_insertion_point(field_add_mutable:benchmark.Message1.field4)
  return field4_.Add();
}
inline void Message1::add_field4(const ::std::string& value) {
  field4_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:benchmark.Message1.field4)
}
#if LANG_CXX11
inline void Message1::add_field4(::std::string&& value) {
  field4_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:benchmark.Message1.field4)
}
#endif
inline void Message1::add_field4(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  field4_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:benchmark.Message1.field4)
}
inline void Message1::add_field4(const char* value, size_t size) {
  field4_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:benchmark.Message1.field4)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
Message1::field4() const {
  // @@protoc_insertion_point(field_list:benchmark.Message1.field4)
  return field4_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
Message1::mutable_field4() {
  // @@protoc_insertion_point(field_mutable_list:benchmark.Message1.field4)
  return &field4_;
}

// bool field59 = 59;
inline void Message1::clear_field59() {
  field59_ = false;
}
inline bool Message1::field59() const {
  // @@protoc_insertion_point(field_get:benchmark.Message1.field59)
  return field59_;
}
inline void Message1::set_field59(bool value) {
  
  field59_ = value;
  // @@protoc_insertion_point(field_set:benchmark.Message1.field59)
}

// int32 field16 = 16;
inline void Message1::clear_field16() {
  field16_ = 0;
}
inline ::google::protobuf::int32 Message1::field16() const {
  // @@protoc_insertion_point(field_get:benchmark.Message1.field16)
  return field16_;
}
inline void Message1::set_field16(::google::protobuf::int32 value) {
  
  field16_ = value;
  // @@protoc_insertion_point(field_set:benchmark.Message1.field16)
}

// int32 field150 = 150;
inline void Message1::clear_field150() {
  field150_ = 0;
}
inline ::google::protobuf::int32 Message1::field150() const {
  // @@protoc_insertion_point(field_get:benchmark.Message1.field150)
  return field150_;
}
inline void Message1::set_field150(::google::protobuf::int32 value) {
  
  field150_ = value;
  // @@protoc_insertion_point(field_set:benchmark.Message1.field150)
}

// int32 field23 = 23;
inline void Message1::clear_field23() {
  field23_ = 0;
}
inline ::google::protobuf::int32 Message1::field23() const {
  // @@protoc_insertion_point(field_get:benchmark.Message1.field23)
  return field23_;
}
inline void Message1::set_field23(::google::protobuf::int32 value) {
  
  field23_ = value;
  // @@protoc_insertion_point(field_set:benchmark.Message1.field23)
}

// bool field24 = 24;
inline void Message1::clear_field24() {
  field24_ = false;
}
inline bool Message1::field24() const {
  // @@protoc_insertion_point(field_get:benchmark.Message1.field24)
  return field24_;
}
inline void Message1::set_field24(bool value) {
  
  field24_ = value;
  // @@protoc_insertion_point(field_set:benchmark.Message1.field24)
}

// int32 field25 = 25;
inline void Message1::clear_field25() {
  field25_ = 0;
}
inline ::google::protobuf::int32 Message1::field25() const {
  // @@protoc_insertion_point(field_get:benchmark.Message1.field25)
  return field25_;
}
inline void Message1::set_field25(::google::protobuf::int32 value) {
  
  field25_ = value;
  // @@protoc_insertion_point(field_set:benchmark.Message1.field25)
}

// .benchmark.SubMessage field15 = 15;
inline bool Message1::has_field15() const {
  return this != internal_default_instance() && field15_ != NULL;
}
inline void Message1::clear_field15() {
  if (GetArenaNoVirtual() == NULL && field15_ != NULL) {
    delete field15_;
  }
  field15_ = NULL;
}
inline const ::benchmark::SubMessage& Message1::_internal_field15() const {
  return *field15_;
}
inline const ::benchmark::SubMessage& Message1::field15() const {
  const ::benchmark::SubMessage* p = field15_;
  // @@protoc_insertion_point(field_get:benchmark.Message1.field15)
  return p != NULL ? *p : *reinterpret_cast<const ::benchmark::SubMessage*>(
      &::benchmark::_SubMessage_default_instance_);
}
inline ::benchmark::SubMessage* Message1::release_field15() {
  // @@protoc_insertion_point(field_release:benchmark.Message1.field15)
  
  ::benchmark::SubMessage* temp = field15_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  field15_ = NULL;
  return temp;
}
inline ::benchmark::SubMessage* Message1::unsafe_arena_release_field15() {
  // @@protoc_insertion_point(field_unsafe_arena_release:benchmark.Message1.field15)
  
  ::benchmark::SubMessage* temp = field15_;
  field15_ = NULL;
  return temp;
}
inline ::benchmark::SubMessage* Message1::mutable_field15() {
  
  if (field15_ == NULL) {
    auto* p = CreateMaybeMessage<::benchmark::SubMessage>(GetArenaNoVirtual());
    field15_ = p;
  }
  // @@protoc_insertion_point(field_mutable:benchmark.Message1.field15)
  return field15_;
}
inline void Message1::set_allocated_field15(::benchmark::SubMessage* field15) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete field15_;
  }
  if (field15) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(field15);
    if (message_arena != submessage_arena) {
      field15 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, field15, submessage_arena);
    }
    
  } else {
    
  }
  field15_ = field15;
  // @@protoc_insertion_point(field_set_allocated:benchmark.Message1.field15)
}

// bool field78 = 78;
inline void Message1::clear_field78() {
  field78_ = false;
}
inline bool Message1::field78() const {
  // @@protoc_insertion_point(field_get:benchmark.Message1.field78)
  return field78_;
}
inline void Message1::set_field78(bool value) {
  
  field78_ = value;
  // @@protoc_insertion_point(field_set:benchmark.Message1.field78)
}

// int32 field67 = 67;
inline void Message1::clear_field67() {
  field67_ = 0;
}
inline ::google::protobuf::int32 Message1::field67() const {
  // @@protoc_insertion_point(field_get:benchmark.Message1.field67)
  return field67_;
}
inline void Message1::set_field67(::google::protobuf::int32 value) {
  
  field67_ = value;
  // @@protoc_insertion_point(field_set:benchmark.Message1.field67)
}

// int32 field68 = 68;
inline void Message1::clear_field68() {
  field68_ = 0;
}
inline ::google::protobuf::int32 Message1::field68() const {
  // @@protoc_insertion_point(field_get:benchmark.Message1.field68)
  return field68_;
}
inline void Message1::set_field68(::google::protobuf::int32 value) {
  
  field68_ = value;
  // @@protoc_insertion_point(field_set:benchmark.Message1.field68)
}

// int32 field128 = 128;
inline void Message1::clear_field128() {
  field128_ = 0;
}
inline ::google::protobuf::int32 Message1::field128() const {
  // @@protoc_insertion_point(field_get:benchmark.Message1.field128)
  return field128_;
}
inline void Message1::set_field128(::google::protobuf::int32 value) {
  
  field128_ = value;
  // @@protoc_insertion_point(field_set:benchmark.Message1.field128)
}

// string field129 = 129;
inline void Message1::clear_field129() {
  field129_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& Message1::field129() const {
  // @@protoc_insertion_point(field_get:benchmark.Message1.field129)
  return field129_.Get();
}
inline void Message1::set_field129(const ::std::string& value) {
  
  field129_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:benchmark.Message1.field129)
}
#if LANG_CXX11
inline void Message1::set_field129(::std::string&& value) {
  
  field129_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:benchmark.Message1.field129)
}
#endif
inline void Message1::set_field129(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  field129_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:benchmark.Message1.field129)
}
inline void Message1::set_field129(const char* value,
    size_t size) {
  
  field129_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:benchmark.Message1.field129)
}
inline ::std::string* Message1::mutable_field129() {
  
  // @@protoc_insertion_point(field_mutable:benchmark.Message1.field129)
  return field129_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* Message1::release_field129() {
  // @@protoc_insertion_point(field_release:benchmark.Message1.field129)
  
  return field129_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void Message1::set_allocated_field129(::std::string* field129) {
  if (field129 != NULL) {
    
  } else {
    
  }
  field129_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), field129,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:benchmark.Message1.field129)
}
inline ::std::string* Message1::unsafe_arena_release_field129() {
  // @@protoc_insertion_point(field_unsafe_arena_release:benchmark.Message1.field129)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return field129_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void Message1::unsafe_arena_set_allocated_field129(
    ::std::string* field129) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (field129 != NULL) {
    
  } else {
    
  }
  field129_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      field129, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:benchmark.Message1.field129)
}

// int32 field131 = 131;
inline void Message1::clear_field131() {
  field131_ = 0;
}
inline ::google::protobuf::int32 Message1::field131() const {
  // @@protoc_insertion_point(field_get:benchmark.Message1.field131)
  return field131_;
}
inline void Message1::set_field131(::google::protobuf::int32 value) {
  
  field131_ = value;
  // @@protoc_insertion_point(field_set:benchmark.Message1.field131)
}

// -------------------------------------------------------------------

// Message2

// .benchmark.Enum field1 = 1;
inline void Message2::clear_field1() {
  field1_ = 0;
}
inline ::benchmark::Enum Message2::field1() const {
  // @@protoc_insertion_point(field_get:benchmark.Message2.field1)
  return static_cast< ::benchmark::Enum >(field1_);
}
inline void Message2::set_field1(::benchmark::Enum value) {
  
  field1_ = value;
  // @@protoc_insertion_point(field_set:benchmark.Message2.field1)
}

// uint64 field2 = 2;
inline void Message2::clear_field2() {
  field2_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 Message2::field2() const {
  // @@protoc_insertion_point(field_get:benchmark.Message2.field2)
  return field2_;
}
inline void Message2::set_field2(::google::protobuf::uint64 value) {
  
  field2_ = value;
  // @@protoc_insertion_point(field_set:benchmark.Message2.field2)
}

// sint32 field3 = 3;
inline void Message2::clear_field3() {
  field3_ = 0;
}
inline ::google::protobuf::int32 Message2::field3() const {
  // @@protoc_insertion_point(field_get:benchmark.Message2.field3)
  return field3_;
}
inline void Message2::set_field3(::google::protobuf::int32 value) {
  
  field3_ = value;
  // @@protoc_insertion_point(field_set:benchmark.Message2.field3)
}

// string field4 = 4;
inline void Message2::clear_field4() {
  field4_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& Message2::field4() const {
  // @@protoc_insertion_point(field_get:benchmark.Message2.field4)
  return field4_.Get();
}
inline void Message2::set_field4(const ::std::string& value) {
  
  field4_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:benchmark.Message2.field4)
}
#if LANG_CXX11
inline void Message2::set_field4(::std::string&& value) {
  
  field4_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:benchmark.Message2.field4)
}
#endif
inline void Message2::set_field4(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  field4_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:benchmark.Message2.field4)
}
inline void Message2::set_field4(const char* value,
    size_t size) {
  
  field4_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:benchmark.Message2.field4)
}
inline ::std::string* Message2::mutable_field4() {
  
  // @@protoc_insertion_point(field_mutable:benchmark.Message2.field4)
  return field4_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* Message2::release_field4() {
  // @@protoc_insertion_point(field_release:benchmark.Message2.field4)
  
  return field4_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void Message2::set_allocated_field4(::std::string* field4) {
  if (field4 != NULL) {
    
  } else {
    
  }
  field4_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), field4,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:benchmark.Message2.field4)
}
inline ::std::string* Message2::unsafe_arena_release_field4() {
  // @@protoc_insertion_point(field_unsafe_arena_release:benchmark.Message2.field4)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return field4_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void Message2::unsafe_arena_set_allocated_field4(
    ::std::string* field4) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (field4 != NULL) {
    
  } else {
    
  }
  field4_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      field4, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:benchmark.Message2.field4)
}

// int32 field5 = 5;
inline void Message2::clear_field5() {
  field5_ = 0;
}
inline ::google::protobuf::int32 Message2::field5() const {
  // @@protoc_insertion_point(field_get:benchmark.Message2.field5)
  return field5_;
}
inline void Message2::set_field5(::google::protobuf::int32 value) {
  
  field5_ = value;
  // @@protoc_insertion_point(field_set:benchmark.Message2.field5)
}

// bool field6 = 6;
inline void Message2::clear_field6() {
  field6_ = false;
}
inline bool Message2::field6() const {
  // @@protoc_insertion_point(field_get:benchmark.Message2.field6)
  return field6_;
}
inline void Message2::set_field6(bool value) {
  
  field6_ = value;
  // @@protoc_insertion_point(field_set:benchmark.Message2.field6)
}

// -------------------------------------------------------------------

// Message3_SubMessage

// int32 field28 = 28;
inline void Message3_SubMessage::clear_field28() {
  field28_ = 0;
}
inline ::google::protobuf::int32 Message3_SubMessage::field28() const {
  // @@protoc_insertion_point(field_get:benchmark.Message3.SubMessage.field28)
  return field28_;
}
inline void Message3_SubMessage::set_field28(::google::protobuf::int32 value) {
  
  field28_ = value;
  // @@protoc_insertion_point(field_set:benchmark.Message3.SubMessage.field28)
}

// int64 field2 = 2;
inline void Message3_SubMessage::clear_field2() {
  field2_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Message3_SubMessage::field2() const {
  // @@protoc_insertion_point(field_get:benchmark.Message3.SubMessage.field2)
  return field2_;
}
inline void Message3_SubMessage::set_field2(::google::protobuf::int64 value) {
  
  field2_ = value;
  // @@protoc_insertion_point(field_set:benchmark.Message3.SubMessage.field2)
}

// int32 field12 = 12;
inline void Message3_SubMessage::clear_field12() {
  field12_ = 0;
}
inline ::google::protobuf::int32 Message3_SubMessage::field12() const {
  // @@protoc_insertion_point(field_get:benchmark.Message3.SubMessage.field12)
  return field12_;
}
inline void Message3_SubMessage::set_field12(::google::protobuf::int32 value) {
  
  field12_ = value;
  // @@protoc_insertion_point(field_set:benchmark.Message3.SubMessage.field12)
}

// string field19 = 19;
inline void Message3_SubMessage::clear_field19() {
  field19_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& Message3_SubMessage::field19() const {
  // @@protoc_insertion_point(field_get:benchmark.Message3.SubMessage.field19)
  return field19_.Get();
}
inline void Message3_SubMessage::set_field19(const ::std::string& value) {
  
  field19_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:benchmark.Message3.SubMessage.field19)
}
#if LANG_CXX11
inline void Message3_SubMessage::set_field19(::std::string&& value) {
  
  field19_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:benchmark.Message3.SubMessage.field19)
}
#endif
inline void Message3_SubMessage::set_field19(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  field19_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:benchmark.Message3.SubMessage.field19)
}
inline void Message3_SubMessage::set_field19(const char* value,
    size_t size) {
  
  field19_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:benchmark.Message3.SubMessage.field19)
}
inline ::std::string* Message3_SubMessage::mutable_field19() {
  
  // @@protoc_insertion_point(field_mutable:benchmark.Message3.SubMessage.field19)
  return field19_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* Message3_SubMessage::release_field19() {
  // @@protoc_insertion_point(field_release:benchmark.Message3.SubMessage.field19)
  
  return field19_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void Message3_SubMessage::set_allocated_field19(::std::string* field19) {
  if (field19 != NULL) {
    
  } else {
    
  }
  field19_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), field19,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:benchmark.Message3.SubMessage.field19)
}
inline ::std::string* Message3_SubMessage::unsafe_arena_release_field19() {
  // @@protoc_insertion_point(field_unsafe_arena_release:benchmark.Message3.SubMessage.field19)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return field19_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void Message3_SubMessage::unsafe_arena_set_allocated_field19(
    ::std::string* field19) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (field19 != NULL) {
    
  } else {
    
  }
  field19_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      field19, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:benchmark.Message3.SubMessage.field19)
}

// int32 field11 = 11;
inline void Message3_SubMessage::clear_field11() {
  field11_ = 0;
}
inline ::google::protobuf::int32 Message3_SubMessage::field11() const {
  // @@protoc_insertion_point(field_get:benchmark.Message3.SubMessage.field11)
  return field11_;
}
inline void Message3_SubMessage::set_field11(::google::protobuf::int32 value) {
  
  field11_ = value;
  // @@protoc_insertion_point(field_set:benchmark.Message3.SubMessage.field11)
}

// -------------------------------------------------------------------

// Message3

// repeated .benchmark.Message3.SubMessage field13 = 13;
inline int Message3::field13_size() const {
  return field13_.size();
}
inline void Message3::clear_field13() {
  field13_.Clear();
}
inline ::benchmark::Message3_SubMessage* Message3::mutable_field13(int index) {
  // @@protoc_insertion_point(field_mutable:benchmark.Message3.field13)
  return field13_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::benchmark::Message3_SubMessage >*
Message3::mutable_field13() {
  // @@protoc_insertion_point(field_mutable_list:benchmark.Message3.field13)
  return &field13_;
}
inline const ::benchmark::Message3_SubMessage& Message3::field13(int index) const {
  // @@protoc_insertion_point(field_get:benchmark.Message3.field13)
  return field13_.Get(index);
}
inline ::benchmark::Message3_SubMessage* Message3::add_field13() {
  // @@protoc_insertion_point(field_add:benchmark.Message3.field13)
  return field13_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::benchmark::Message3_SubMessage >&
Message3::field13() const {
  // @@protoc_insertion_point(field_list:benchmark.Message3.field13)
  return field13_;
}

// -------------------------------------------------------------------

// Message

// .benchmark.Message1 message1 = 1;
inline bool Message::has_message1() const {
  return oneof_case() == kMessage1;
}
inline void Message::set_has_message1() {
  _oneof_case_[0] = kMessage1;
}
inline void Message::clear_message1() {
  if (has_message1()) {
    if (GetArenaNoVirtual() == NULL) {
      delete oneof_.message1_;
    }
    clear_has_oneof();
  }
}
inline const ::benchmark::Message1& Message::_internal_message1() const {
  return *oneof_.message1_;
}
inline ::benchmark::Message1* Message::release_message1() {
  // @@protoc_insertion_point(field_release:benchmark.Message.message1)
  if (has_message1()) {
    clear_has_oneof();
      ::benchmark::Message1* temp = oneof_.message1_;
    if (GetArenaNoVirtual() != NULL) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    oneof_.message1_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::benchmark::Message1& Message::message1() const {
  // @@protoc_insertion_point(field_get:benchmark.Message.message1)
  return has_message1()
      ? *oneof_.message1_
      : *reinterpret_cast< ::benchmark::Message1*>(&::benchmark::_Message1_default_instance_);
}
inline ::benchmark::Message1* Message::unsafe_arena_release_message1() {
  // @@protoc_insertion_point(field_unsafe_arena_release:benchmark.Message.message1)
  if (has_message1()) {
    clear_has_oneof();
    ::benchmark::Message1* temp = oneof_.message1_;
    oneof_.message1_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Message::unsafe_arena_set_allocated_message1(::benchmark::Message1* message1) {
  clear_oneof();
  if (message1) {
    set_has_message1();
    oneof_.message1_ = message1;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:benchmark.Message.message1)
}
inline ::benchmark::Message1* Message::mutable_message1() {
  if (!has_message1()) {
    clear_oneof();
    set_has_message1();
    oneof_.message1_ = CreateMaybeMessage< ::benchmark::Message1 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:benchmark.Message.message1)
  return oneof_.message1_;
}

// .benchmark.Message2 message2 = 2;
inline bool Message::has_message2() const {
  return oneof_case() == kMessage2;
}
inline void Message::set_has_message2() {
  _oneof_case_[0] = kMessage2;
}
inline void Message::clear_message2() {
  if (has_message2()) {
    if (GetArenaNoVirtual() == NULL) {
      delete oneof_.message2_;
    }
    clear_has_oneof();
  }
}
inline const ::benchmark::Message2& Message::_internal_message2() const {
  return *oneof_.message2_;
}
inline ::benchmark::Message2* Message::release_message2() {
  // @@protoc_insertion_point(field_release:benchmark.Message.message2)
  if (has_message2()) {
    clear_has_oneof();
      ::benchmark::Message2* temp = oneof_.message2_;
    if (GetArenaNoVirtual() != NULL) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    oneof_.message2_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::benchmark::Message2& Message::message2() const {
  // @@protoc_insertion_point(field_get:benchmark.Message.message2)
  return has_message2()
      ? *oneof_.message2_
      : *reinterpret_cast< ::benchmark::Message2*>(&::benchmark::_Message2_default_instance_);
}
inline ::benchmark::Message2* Message::unsafe_arena_release_message2() {
  // @@protoc_insertion_point(field_unsafe_arena_release:benchmark.Message.message2)
  if (has_message2()) {
    clear_has_oneof();
    ::benchmark::Message2* temp = oneof_.message2_;
    oneof_.message2_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Message::unsafe_arena_set_allocated_message2(::benchmark::Message2* message2) {
  clear_oneof();
  if (message2) {
    set_has_message2();
    oneof_.message2_ = message2;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:benchmark.Message.message2)
}
inline ::benchmark::Message2* Message::mutable_message2() {
  if (!has_message2()) {
    clear_oneof();
    set_has_message2();
    oneof_.message2_ = CreateMaybeMessage< ::benchmark::Message2 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:benchmark.Message.message2)
  return oneof_.message2_;
}

// .benchmark.Message3 message3 = 7;
inline bool Message::has_message3() const {
  return oneof_case() == kMessage3;
}
inline void Message::set_has_message3() {
  _oneof_case_[0] = kMessage3;
}
inline void Message::clear_message3() {
  if (has_message3()) {
    if (GetArenaNoVirtual() == NULL) {
      delete oneof_.message3_;
    }
    clear_has_oneof();
  }
}
inline const ::benchmark::Message3& Message::_internal_message3() const {
  return *oneof_.message3_;
}
inline ::benchmark::Message3* Message::release_message3() {
  // @@protoc_insertion_point(field_release:benchmark.Message.message3)
  if (has_message3()) {
    clear_has_oneof();
      ::benchmark::Message3* temp = oneof_.message3_;
    if (GetArenaNoVirtual() != NULL) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    oneof_.message3_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::benchmark::Message3& Message::message3() const {
  // @@protoc_insertion_point(field_get:benchmark.Message.message3)
  return has_message3()
      ? *oneof_.message3_
      : *reinterpret_cast< ::benchmark::Message3*>(&::benchmark::_Message3_default_instance_);
}
inline ::benchmark::Message3* Message::unsafe_arena_release_message3() {
  // @@protoc_insertion_point(field_unsafe_arena_release:benchmark.Message.message3)
  if (has_message3()) {
    clear_has_oneof();
    ::benchmark::Message3* temp = oneof_.message3_;
    oneof_.message3_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Message::unsafe_arena_set_allocated_message3(::benchmark::Message3* message3) {
  clear_oneof();
  if (message3) {
    set_has_message3();
    oneof_.message3_ = message3;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:benchmark.Message.message3)
}
inline ::benchmark::Message3* Message::mutable_message3() {
  if (!has_message3()) {
    clear_oneof();
    set_has_message3();
    oneof_.message3_ = CreateMaybeMessage< ::benchmark::Message3 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:benchmark.Message.message3)
  return oneof_.message3_;
}

inline bool Message::has_oneof() const {
  return oneof_case() != ONEOF_NOT_SET;
}
inline void Message::clear_has_oneof() {
  _oneof_case_[0] = ONEOF_NOT_SET;
}
inline Message::OneofCase Message::oneof_case() const {
  return Message::OneofCase(_oneof_case_[0]);
}
#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace benchmark

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::benchmark::Enum> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::benchmark::Enum>() {
  return ::benchmark::Enum_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_benchmark_2eproto
